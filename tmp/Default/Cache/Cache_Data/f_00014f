{"version":3,"sources":["webpack://frontend_viewability/webpack/bootstrap","webpack://frontend_viewability/webpack/runtime/global","webpack://frontend_viewability/webpack/runtime/make namespace object","webpack://frontend_viewability/./src/session-client/partner.ts","webpack://frontend_viewability/./src/common/constants.ts","webpack://frontend_viewability/./src/session-client/verification-script-resource.ts","webpack://frontend_viewability/./src/session-client/context.ts","webpack://frontend_viewability/./src/common/internal-message.ts","webpack://frontend_viewability/./src/common/omid-global-provider.ts","webpack://frontend_viewability/./src/common/direct-communication.ts","webpack://frontend_viewability/./src/common/comunication.ts","webpack://frontend_viewability/./src/common/window-utils.ts","webpack://frontend_viewability/./src/common/service-comunication.ts","webpack://frontend_viewability/./src/common/guid.ts","webpack://frontend_viewability/./src/common/service-method-utils.ts","webpack://frontend_viewability/./src/common/version-utils.ts","webpack://frontend_viewability/./src/common/args-serde.ts","webpack://frontend_viewability/./src/session-client/omid-session-interface.ts","webpack://frontend_viewability/./src/session-client/ad-session.ts","webpack://frontend_viewability/./src/common/version.ts","webpack://frontend_viewability/./src/viewability/viewability.ts","webpack://frontend_viewability/./src/viewability/main.ts"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","r","exports","Symbol","toStringTag","Object","defineProperty","value","Partner","name","version","CommunicationType","AdEventType","AccessMode","CreativeType","ImpressionType","ErrorType","VerificationScriptResource","resourceUrl","vendorKey","verificationParameters","accessMode","Context","partner","verificationScriptResources","contentUrl","customReferenceData","slotElement","underEvaluation","serviceWindow","GUID_KEY","METHOD_KEY","VERSION_KEY","ARGS_KEY","guid","method","args","message","InternalMessage","exported","undefined","omidGlobal","DirectCommunication","to","communicationType_","handleExportedMessage","prototype","bind","Error","serialize","exportedMessage","from","handleMessage","onMessage","JSON","stringify","messageJson","parse","global","globalObject","getOmidGlobal","isValidWindow","win","top","OmidGlobal","resolveTopWindowContext","EXPORTED_SESSION_COMMUNICATION_NAME","getValueForKeypath","object","unobfuscatedKeypath","reduce","subObject","key","startServiceCommunication","serviceGlobal","exportedCommunicationName","location","hostname","isCrossOrigin","directCommunication","startServiceCommunicationFromCandidates","serviceGlobalCandidates","i","length","communication","generateGuid","replace","character","containsClockSeqHiAndReserved","randomNumber","Math","random","toString","ServiceMethodPrefix","getPrefixedMethod","unprefixedMethod","prefix","isValidVersion","test","versionGreaterOrEqual","baseVersion","versionToCompare","baseComponents","split","toCompareComponents","baseNumber","parseInt","toCompareNumber","ARGS_NOT_SERIALIZED_VERSION","ExportedNodeKeys","MethodNameMap","sessionError","AdEventMethodNames","OmidJsSessionInterface","globalScope","interfaceRoot_","methodParam","responseCallback","argsParam","interfaceNode","indexOf","SESSION_CLIENT_VERSION","AdSession","context","sessionInterface","impressionOccurred_","hasAdEvents_","hasMediaEvents_","isSessionRunning_","creativeType_","callbackMap_","impressionType_","creativeLoaded_","context_","tmp","communication_","clientGlobal","unshift","startSessionServiceCommunication","sessionInterface_","handleInternalMessage_","setClientInfo_","injectVerificationScripts_","sendSlotElement_","sendContentUrl_","watchSessionEvents_","creativeType","sendOneWayMessage","impressionType","Boolean","isSupported","isDirectCommunication","functionToExecute","sendMessage","sessionStartContext","errorType","sendInternalMessage_","sendInterfaceMessage_","serializeMessageArgs","parsedArgs","deserializeMessageArgs","apply","error","console","log","resources","map","element","sendElement_","isSendingElementsSupported_","elementBounds","registerSessionObserver","event","type","data","Viewability","sdkUrl","measurementScriptUrl","STATIC_URL","SDK_URL","MEASUREMENT_SCRIPT_URL","VENDOR_KEY","VERIFICATIONS_PARAMETER","getCookie","document","cookie","acc","item","trim","addSession","trackUrl","iframe","createOmsdkIframe","addEventListener","createAdSession","start","body","appendChild","createElement","style","display","srcdoc","omsdkIframe","verificationScriptResource","setSlotElement","contentWindow","setServiceWindow","viewability","Event","bubbles","composed","dispatchEvent"],"mappings":"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","file":"viewability-script.0.0.4.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class Partner {\n  name: string;\n\n  version: string;\n\n  constructor(name: string, version: string) {\n    this.name = name;\n    this.version = version;\n  }\n}\n","export const CommunicationType = {\n  NONE: 'NONE',\n  DIRECT: 'DIRECT',\n};\n\nexport const AdEventType = {\n  GEOMETRY_CHANGE: 'geometryChange',\n  SESSION_START: 'sessionStart',\n  SESSION_ERROR: 'sessionError',\n  SESSION_FINISH: 'sessionFinish',\n};\n\nexport const AccessMode = {\n  FULL: 'full',\n};\n\nexport const CreativeType = {\n  DEFINED_BY_JAVASCRIPT: 'definedByJavaScript',\n  HTML_DISPLAY: 'htmlDisplay',\n  NATIVE_DISPLAY: 'nativeDisplay',\n};\n\nexport const ImpressionType = {\n  DEFINED_BY_JAVASCRIPT: 'definedByJavaScript',\n  UNSPECIFIED: 'unspecified',\n  LOADED: 'loaded',\n  BEGIN_TO_RENDER: 'beginToRender',\n  ONE_PIXEL: 'onePixel',\n  VIEWABLE: 'viewable',\n  OTHER: 'other',\n};\n\nexport const ErrorType = {\n  GENERIC: 'generic',\n  MEDIA: 'media',\n};\n\nexport const OmidPartnerName = 'Referenceapp';\nexport const OmidPartnerVersion = '0.0.0';\n","import { AccessMode } from '../common/constants';\n\nexport default class VerificationScriptResource {\n  resourceUrl: string;\n\n  vendorKey?: string;\n\n  verificationParameters?: string;\n\n  accessMode: string;\n\n  constructor(resourceUrl: string, vendorKey?: string, verificationParameters?: string, accessMode: string = AccessMode.FULL) {\n    this.resourceUrl = resourceUrl;\n    this.vendorKey = vendorKey;\n    this.verificationParameters = verificationParameters;\n    this.accessMode = accessMode;\n  }\n\n  serialize() {\n    return {\n      accessMode: this.accessMode,\n      resourceUrl: this.resourceUrl,\n      vendorKey: this.vendorKey,\n      verificationParameters: this.verificationParameters,\n    };\n  }\n}\n\n","import Partner from './partner';\nimport VerificationScriptResource from './verification-script-resource';\n\nclass Context {\n  partner: Partner;\n\n  verificationScriptResources: VerificationScriptResource[];\n\n  contentUrl: (string | null);\n\n  customReferenceData: string | null;\n\n  slotElement: Element | null;\n\n  underEvaluation: boolean;\n\n  serviceWindow: unknown;\n\n  constructor(\n    partner: Partner,\n    verificationScriptResources: VerificationScriptResource[],\n    contentUrl: (string | null) = null,\n    customReferenceData: string | null = null,\n  ) {\n    this.partner = partner;\n    this.verificationScriptResources = verificationScriptResources;\n    this.slotElement = null;\n    this.contentUrl = contentUrl;\n    this.customReferenceData = customReferenceData;\n    this.underEvaluation = false;\n    this.serviceWindow = null;\n  }\n\n  setSlotElement(slotElement: Element) {\n    this.slotElement = slotElement;\n  }\n\n  setServiceWindow(serviceWindow: unknown) {\n    this.serviceWindow = serviceWindow;\n  }\n}\n\nexport default Context;\n","const GUID_KEY = 'omid_message_guid';\nconst METHOD_KEY = 'omid_message_method';\nconst VERSION_KEY = 'omid_message_version';\nconst ARGS_KEY = 'omid_message_args';\n\nexport interface SerializedMessage {\n  [GUID_KEY]: string\n  [METHOD_KEY]: string\n  [VERSION_KEY]: string\n  [ARGS_KEY]?: string | unknown[]\n}\n\nclass InternalMessage {\n  static deserialize(message: SerializedMessage) {\n    return new InternalMessage(\n      message[GUID_KEY],\n      message[METHOD_KEY],\n      message[VERSION_KEY],\n      message[ARGS_KEY],\n    );\n  }\n\n  guid: string;\n\n  method: string;\n\n  version: string;\n\n  args?: string | unknown[];\n\n  constructor(guid: string, method: string, version: string, args?: string | unknown[]) {\n    this.guid = guid;\n    this.method = method;\n    this.version = version;\n    this.args = args;\n  }\n\n  serialize() {\n    const exported: SerializedMessage = {\n      [GUID_KEY]: this.guid,\n      [METHOD_KEY]: this.method,\n      [VERSION_KEY]: this.version,\n    };\n    if (this.args !== undefined) {\n      exported[ARGS_KEY] = this.args;\n    }\n    return exported;\n  }\n}\n\nexport default InternalMessage;\n","\nlet omidGlobal: Window | typeof globalThis;\n\nconst getOmidGlobal = (): Window | typeof globalThis => {\n  if (typeof omidGlobal !== 'undefined' && omidGlobal) {\n    return omidGlobal;\n  }\n  if (typeof global !== 'undefined' && global) {\n    return global;\n  }\n  if (typeof window !== 'undefined' && window) {\n    return window;\n  }\n  if (typeof globalThis !== 'undefined' && globalThis) {\n    return globalThis;\n  }\n  const globalObject: Window = (Function('return this')());\n  if (globalObject) return globalObject;\n\n  throw new Error('Could not determine global object context.');\n};\n\nomidGlobal = getOmidGlobal();\n\nexport default {\n  omidGlobal,\n};\n","\nimport Communication from './comunication';\nimport { CommunicationType } from './constants';\nimport InternalMessage, { SerializedMessage } from './internal-message';\n\nclass DirectCommunication extends Communication {\n  constructor(to: any) {\n    super(to);\n    this.communicationType_ = CommunicationType.DIRECT;\n    this.handleExportedMessage = DirectCommunication.prototype.handleExportedMessage.bind(this);\n  }\n\n  sendMessage(message: InternalMessage, to = this.to) {\n    if (!to) {\n      throw new Error('Message destination must be defined at construction '\n                      + 'time or when sending the message.');\n    }\n    to.handleExportedMessage(message.serialize(), this);\n  }\n\n  handleExportedMessage(exportedMessage: SerializedMessage, from: unknown) {\n    this.handleMessage(\n      InternalMessage.deserialize(exportedMessage),\n      from,\n    );\n  }\n\n  isCrossOrigin() {\n    return false;\n  }\n}\n\nexport default DirectCommunication;\n","import InternalMessage from './internal-message';\nimport { CommunicationType } from './constants';\n\nabstract class Communication {\n  to?: any;\n\n  onMessage?: (message: InternalMessage, from: any) => void;\n\n  communicationType_: string;\n\n  constructor(to?: any) {\n    this.to = to;\n    this.communicationType_ = CommunicationType.NONE;\n  }\n\n  abstract sendMessage(message: InternalMessage, to?: any): void;\n\n  abstract isCrossOrigin(): boolean;\n\n  handleMessage(message: InternalMessage, from: unknown) {\n    if (this.onMessage) this.onMessage(message, from);\n  }\n\n  serialize(message: object) {\n    return JSON.stringify(message);\n  }\n\n  deserialize(messageJson: string): object {\n    try {\n      return (JSON.parse(messageJson) as object);\n    } catch {\n      return {};\n    }\n  }\n\n  isDirectCommunication(): boolean {\n    return this.communicationType_ === CommunicationType.DIRECT;\n  }\n}\n\nexport default Communication;\n","import OmidGlobal from './omid-global-provider';\n\nconst isValidWindow = (win: any = undefined) => win != null && typeof win.top !== 'undefined' && win.top != null;\nconst { omidGlobal } = OmidGlobal;\n\nexport const isCrossOrigin = (win: any) => {\n  if (win === omidGlobal) {\n    return false;\n  }\n  try {\n    if (typeof win.location.hostname === 'undefined') {\n      return true;\n    }\n  } catch (e) {\n    return true;\n  }\n  return false;\n};\n\nexport const resolveTopWindowContext = (win: any) => {\n  if (!isValidWindow(win)) {\n    return omidGlobal;\n  }\n  return win.top;\n};\n\nexport const resolveGlobalContext = (win?: any): typeof globalThis | Window => {\n  let tmp = win;\n  if (typeof win === 'undefined' && typeof window !== 'undefined' && window) {\n    tmp = window;\n  }\n  if (isValidWindow(tmp)) {\n    return tmp;\n  }\n  return omidGlobal;\n};\n","import DirectCommunication from './direct-communication';\nimport { isCrossOrigin, resolveTopWindowContext } from './window-utils';\n\nconst EXPORTED_SESSION_COMMUNICATION_NAME = ['omid', 'v1_SessionServiceCommunication'];\n\nconst EXPORTED_VERIFICATION_COMMUNICATION_NAME = ['omid', 'v1_VerificationServiceCommunication'];\n\nconst EXPORTED_SERVICE_WINDOW_NAME = ['omidVerificationProperties', 'serviceWindow'];\n\nfunction getValueForKeypath(object: any, unobfuscatedKeypath: string[]) {\n  return unobfuscatedKeypath.reduce(\n    (subObject, key) => subObject && subObject[key],\n    object,\n  );\n}\n\nfunction startServiceCommunication(\n  serviceGlobal: any,\n  exportedCommunicationName: string[],\n) {\n  if (!isCrossOrigin(serviceGlobal)) {\n    try {\n      const directCommunication = getValueForKeypath(\n        serviceGlobal,\n        exportedCommunicationName,\n      );\n      if (directCommunication) {\n        return new DirectCommunication(directCommunication);\n      }\n    } catch (e) { /* */ }\n  }\n  return null;\n}\n\nfunction startServiceCommunicationFromCandidates(\n  serviceGlobalCandidates: any[],\n  exportedCommunicationName: string[],\n) {\n  for (let i = 0; i < serviceGlobalCandidates.length; i += 1) {\n    const serviceGlobal = serviceGlobalCandidates[i];\n    const communication = startServiceCommunication(\n      serviceGlobal,\n      exportedCommunicationName,\n    );\n    if (communication) {\n      return communication;\n    }\n  }\n  return null;\n}\n\nexport function startSessionServiceCommunication(\n  clientGlobal: any,\n  serviceGlobal: any = undefined,\n) {\n  const serviceGlobalCandidates = [\n    clientGlobal,\n    resolveTopWindowContext(clientGlobal),\n  ];\n\n  if (serviceGlobal) {\n    serviceGlobalCandidates.unshift(serviceGlobal);\n  }\n\n  return startServiceCommunicationFromCandidates(\n    serviceGlobalCandidates,\n    EXPORTED_SESSION_COMMUNICATION_NAME,\n  );\n}\n\nexport function startVerificationServiceCommunication(\n  clientGlobal: typeof globalThis | Window,\n) {\n  const serviceGlobalCandidates = [];\n  const providedServiceWindow = getValueForKeypath(\n    clientGlobal, EXPORTED_SERVICE_WINDOW_NAME,\n  );\n\n  if (providedServiceWindow) {\n    serviceGlobalCandidates.push(providedServiceWindow);\n  }\n  serviceGlobalCandidates.push(resolveTopWindowContext(clientGlobal));\n\n  return startServiceCommunicationFromCandidates(\n    serviceGlobalCandidates,\n    EXPORTED_VERIFICATION_COMMUNICATION_NAME,\n  );\n}\n","export function generateGuid(): string {\n  const digit = (containsClockSeqHiAndReserved: boolean) => {\n    const randomNumber = Math.random() * 16 | 0;\n    if (containsClockSeqHiAndReserved) {\n      return ((randomNumber & 0x3) | 0x8).toString(16);\n    }\n    return randomNumber.toString(16);\n  };\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n    /[xy]/g, character => digit(character === 'y'),\n  );\n}\n","const ServiceMethodPrefix = {\n  SESSION_SERVICE: 'SessionService.',\n  VERIFICATION_SERVICE: 'VerificationService.',\n};\n\nconst getPrefixedMethod = (unprefixedMethod: string, prefix: string) => prefix + unprefixedMethod;\n\nexport const getPrefixedVerificationServiceMethod = (unprefixedMethod: string) => getPrefixedMethod(\n  unprefixedMethod,\n  ServiceMethodPrefix.VERIFICATION_SERVICE,\n);\n\nexport const getPrefixedSessionServiceMethod = (unprefixedMethod: string) => getPrefixedMethod(\n  unprefixedMethod,\n  ServiceMethodPrefix.SESSION_SERVICE,\n);\n","const SEMVER_DIGITS_NUMBER = 3;\n\nexport const isValidVersion = (version: string) => /\\d+\\.\\d+\\.\\d+(-.*)?/.test(version);\n\nexport const versionGreaterOrEqual = (baseVersion: string, versionToCompare: string) => {\n  const baseComponents = baseVersion.split('-')[0].split('.');\n  const toCompareComponents = versionToCompare.split('-')[0].split('.');\n\n  for (let i = 0; i < SEMVER_DIGITS_NUMBER; i += 1) {\n    const baseNumber = parseInt(baseComponents[i], 10);\n    const toCompareNumber = parseInt(toCompareComponents[i], 10);\n    if (baseNumber > toCompareNumber) {\n      return true;\n    } if (baseNumber < toCompareNumber) {\n      return false;\n    }\n  }\n  return true;\n};\n","import { isValidVersion, versionGreaterOrEqual } from './version-utils';\n\nconst ARGS_NOT_SERIALIZED_VERSION = '1.0.3';\n\nexport function serializeMessageArgs(version: string, args: string | unknown[] | undefined) {\n  if (isValidVersion(version)\n      && versionGreaterOrEqual(version, ARGS_NOT_SERIALIZED_VERSION)) {\n    return args;\n  }\n  return JSON.stringify(args);\n}\n\nexport function deserializeMessageArgs(version: string, args?: any) : any[] {\n  if (isValidVersion(version)\n      && versionGreaterOrEqual(version, ARGS_NOT_SERIALIZED_VERSION)) {\n    return args || [];\n  }\n  return args ? JSON.parse(args as string) : [];\n}\n","import OmidGlobal from '../common/omid-global-provider';\n\nconst { omidGlobal } = OmidGlobal;\n\nconst ExportedNodeKeys = {\n  ROOT: 'omidSessionInterface',\n  AD_EVENTS: 'adEvents',\n};\n\nconst MethodNameMap = {\n  sessionError: 'reportError',\n};\n\nconst AdEventMethodNames = [\n  'impressionOccurred',\n];\n\nclass OmidJsSessionInterface {\n  interfaceRoot_: typeof globalThis | Window;\n\n  constructor(globalScope: (typeof globalThis | Window) = omidGlobal) {\n    this.interfaceRoot_ = globalScope[ExportedNodeKeys.ROOT as keyof typeof globalScope];\n  }\n\n  isSupported() {\n    return this.interfaceRoot_ != null;\n  }\n\n  sendMessage(methodParam: string, responseCallback: CallbackFn, argsParam: unknown[]) {\n    let method = methodParam;\n    let interfaceNode: any = this.interfaceRoot_;\n    const args = (method === 'registerSessionObserver') ? [responseCallback] : argsParam;\n\n    if (method in MethodNameMap) {\n      method = MethodNameMap[method as keyof typeof MethodNameMap];\n    }\n\n    if (AdEventMethodNames.indexOf(method) >= 0) {\n      interfaceNode = interfaceNode[ExportedNodeKeys.AD_EVENTS];\n    }\n\n    if (!interfaceNode[method]) {\n      throw new Error(`Unrecognized method name: ${method}.`);\n    }\n\n    interfaceNode[method](...args);\n  }\n}\n\nexport default OmidJsSessionInterface;\n","import Context from './context';\nimport { Version } from '../common/version';\nimport InternalMessage from '../common/internal-message';\nimport { startSessionServiceCommunication } from '../common/service-comunication';\nimport { resolveGlobalContext } from '../common/window-utils';\nimport { AdEventType, CreativeType, ImpressionType, ErrorType } from '../common/constants';\nimport { generateGuid } from '../common/guid';\nimport Rectangle from '../common/rectangle';\nimport { getPrefixedSessionServiceMethod } from '../common/service-method-utils';\nimport VerificationScriptResource from './verification-script-resource';\nimport { deserializeMessageArgs, serializeMessageArgs } from '../common/args-serde';\nimport OmidJsSessionInterface from './omid-session-interface';\nimport Communication from '../common/comunication';\n\nconst SESSION_CLIENT_VERSION = Version;\n\nexport default class AdSession {\n  context_: Context;\n\n  impressionOccurred_ = false;\n\n  communication_;\n\n  sessionInterface_;\n\n  hasAdEvents_ = false;\n\n  hasMediaEvents_ = false;\n\n  isSessionRunning_ = false;\n\n  creativeType_?: string | null = null;\n\n  callbackMap_: Record<string, any> = {};\n\n  impressionType_: any = null;\n\n  creativeLoaded_ = false;\n\n\n  constructor(\n    context: Context,\n    communication?: Communication,\n    sessionInterface?: OmidJsSessionInterface,\n  ) {\n    this.context_ = context;\n\n    const serviceWindow = this.context_.serviceWindow || undefined;\n\n    this.communication_ = communication\n        || startSessionServiceCommunication(resolveGlobalContext(), serviceWindow);\n\n    this.sessionInterface_ = sessionInterface || new OmidJsSessionInterface();\n\n    if (this.communication_) {\n      this.communication_.onMessage = this.handleInternalMessage_.bind(this);\n    }\n\n    this.setClientInfo_();\n    this.injectVerificationScripts_(context.verificationScriptResources);\n    if (context.slotElement) {\n      this.sendSlotElement_(context.slotElement);\n    }\n\n    this.sendContentUrl_(context.contentUrl);\n    this.watchSessionEvents_();\n  }\n\n  setCreativeType(creativeType?: string) {\n    if (creativeType === CreativeType.DEFINED_BY_JAVASCRIPT) {\n      throw new Error(`Creative type cannot be redefined with value ${\n        CreativeType.DEFINED_BY_JAVASCRIPT}`);\n    }\n    if (this.impressionOccurred_) {\n      throw new Error('Impression has already occurred');\n    }\n    if (this.creativeLoaded_) {\n      throw new Error('Creative has already loaded');\n    }\n    if (this.creativeType_\n      && this.creativeType_ !== CreativeType.DEFINED_BY_JAVASCRIPT) {\n      throw new Error('Creative type cannot be redefined');\n    }\n    if (this.creativeType_ === undefined) {\n      throw new Error('Native integration is using OMID 1.2 or earlier');\n    }\n    this.sendOneWayMessage('setCreativeType', creativeType);\n    this.creativeType_ = creativeType;\n  }\n\n  setImpressionType(impressionType?: string) {\n    if (impressionType === ImpressionType.DEFINED_BY_JAVASCRIPT) {\n      throw new Error(`Impression type cannot be redefined with value ${\n        ImpressionType.DEFINED_BY_JAVASCRIPT}`);\n    }\n    if (this.impressionOccurred_) {\n      throw new Error('Impression has already occurred');\n    }\n    if (this.creativeLoaded_) {\n      throw new Error('Creative has already loaded');\n    }\n    if (this.impressionType_\n      && this.impressionType_ !== ImpressionType.DEFINED_BY_JAVASCRIPT) {\n      throw new Error('Impression type cannot be redefined');\n    }\n    if (this.impressionType_ === undefined) {\n      throw new Error('Native integration is using OMID 1.2 or earlier');\n    }\n    this.sendOneWayMessage('setImpressionType', impressionType);\n    this.impressionType_ = impressionType;\n  }\n\n  isSupported() {\n    return Boolean(this.communication_) || this.sessionInterface_.isSupported();\n  }\n\n  isSendingElementsSupported_() {\n    return this.communication_ ? this.communication_.isDirectCommunication()\n      : this.sessionInterface_.isSupported();\n  }\n\n  registerSessionObserver(functionToExecute: CallbackFn) {\n    this.sendMessage('registerSessionObserver', functionToExecute);\n  }\n\n  start() {\n    const sessionStartContext = {\n      customReferenceData: this.context_.customReferenceData,\n      underEvaluation: this.context_.underEvaluation,\n    };\n    this.sendOneWayMessage('startSession', sessionStartContext);\n  }\n\n  finish() {\n    this.sendOneWayMessage('finishSession');\n  }\n\n  error(errorType: any, message: any) {\n    this.sendOneWayMessage('sessionError', errorType, message);\n  }\n\n  registerAdEvents() {\n    if (this.hasAdEvents_) {\n      throw new Error('AdEvents already registered.');\n    }\n    this.hasAdEvents_ = true;\n    this.sendOneWayMessage('registerAdEvents');\n  }\n\n  sendOneWayMessage(method: string, ...args: unknown[]) {\n    this.sendMessage(method, null, ...args);\n  }\n\n  sendMessage(method: string, responseCallback: CallbackFn, ...args: any[]) {\n    if (this.communication_) {\n      this.sendInternalMessage_(method, responseCallback, args);\n      return;\n    }\n    if (this.sessionInterface_.isSupported()) {\n      this.sendInterfaceMessage_(method, responseCallback, args);\n    }\n  }\n\n  sendInternalMessage_(method: string, responseCallback: CallbackFn, args: any[]) {\n    const guid = generateGuid();\n    const message = new InternalMessage(\n      guid, getPrefixedSessionServiceMethod(method), SESSION_CLIENT_VERSION,\n      serializeMessageArgs(SESSION_CLIENT_VERSION, args),\n    );\n\n    if (responseCallback) {\n      this.callbackMap_[guid] = responseCallback;\n    }\n\n    if (this.communication_) {\n      this.communication_.sendMessage(message);\n    }\n  }\n\n  handleInternalMessage_(message: InternalMessage, from: any) {\n    const { method, guid, args } = message;\n    if (method === 'response' && this.callbackMap_[guid]) {\n      const parsedArgs = deserializeMessageArgs(SESSION_CLIENT_VERSION, args);\n      this.callbackMap_[guid].apply(this, parsedArgs);\n    }\n  }\n\n  sendInterfaceMessage_(method: string, responseCallback: CallbackFn, args: any[]) {\n    try {\n      this.sessionInterface_.sendMessage(method, responseCallback, args);\n    } catch (error) {\n      console.log('Failed to communicate with SessionInterface with error:', error);\n    }\n  }\n\n  assertSessionRunning() {\n    if (!this.isSessionRunning_) {\n      throw new Error('Session not started.');\n    }\n  }\n\n  impressionOccurred() {\n    if (this.creativeType_ === CreativeType.DEFINED_BY_JAVASCRIPT) {\n      throw new Error('Creative type has not been redefined');\n    }\n    if (this.impressionType_ === ImpressionType.DEFINED_BY_JAVASCRIPT) {\n      throw new Error('Impression type has not been redefined');\n    }\n    this.impressionOccurred_ = true;\n  }\n\n  creativeLoaded() {\n    if (this.creativeType_ === CreativeType.DEFINED_BY_JAVASCRIPT) {\n      throw new Error('Creative type has not been redefined');\n    }\n    if (this.impressionType_ === ImpressionType.DEFINED_BY_JAVASCRIPT) {\n      throw new Error('Impression type has not been redefined');\n    }\n    this.creativeLoaded_ = true;\n  }\n\n  setClientInfo_() {\n    this.sendOneWayMessage('setClientInfo', SESSION_CLIENT_VERSION,\n      this.context_.partner.name, this.context_.partner.version);\n  }\n\n  injectVerificationScripts_(verificationScriptResources: VerificationScriptResource[]) {\n    if (!verificationScriptResources) return;\n    const resources = verificationScriptResources.map(r => r.serialize());\n    this.sendOneWayMessage('injectVerificationScriptResources', resources);\n  }\n\n  sendSlotElement_(element: Element) {\n    this.sendElement_(element, 'setSlotElement');\n  }\n\n  sendElement_(element: Element, method: string) {\n    if (!this.isSendingElementsSupported_()) {\n      this.error(\n        ErrorType.GENERIC,\n        `Session Client ${method} called when communication is cross-origin`,\n      );\n      return;\n    }\n    this.sendOneWayMessage(method, element);\n  }\n\n  sendContentUrl_(contentUrl?: string | null) {\n    if (!contentUrl) {\n      return;\n    }\n    this.sendOneWayMessage('setContentUrl', contentUrl);\n  }\n\n  setElementBounds(elementBounds: Rectangle) {\n    this.sendOneWayMessage('setElementBounds', elementBounds);\n  }\n\n  watchSessionEvents_() {\n    this.registerSessionObserver((event: any) => {\n      if (event.type === AdEventType.SESSION_START) {\n        this.isSessionRunning_ = true;\n        this.creativeType_ = event.data.creativeType;\n        this.impressionType_ = event.data.impressionType;\n      }\n      if (event.type === AdEventType.SESSION_FINISH) {\n        this.isSessionRunning_ = false;\n      }\n    });\n  }\n}\n","export const ApiVersion = '1.0';\nexport const Version = '1.3.37-dev';\n","import Partner from '../session-client/partner';\nimport VerificationScriptResource from '../session-client/verification-script-resource';\nimport Context from '../session-client/context';\nimport { OmidPartnerName, OmidPartnerVersion } from '../common/constants';\nimport AdSession from '../session-client/ad-session';\n\nexport default class Viewability {\n  STATIC_URL = 'https://http2.mlstatic.com/frontend-assets/frontend-viewability';\n\n  SDK_URL = 'omweb-v1.js';\n\n  MEASUREMENT_SCRIPT_URL = 'measurement-script.js';\n\n  VENDOR_KEY = '';\n\n  VERIFICATIONS_PARAMETER = '';\n\n  constructor(sdkUrl?: string, measurementScriptUrl?: string) {\n    this.SDK_URL = `${this.STATIC_URL}/omweb-v1.js`;\n    this.MEASUREMENT_SCRIPT_URL = `${this.STATIC_URL}/measurement-script.js`;\n    const version = this.getCookie('viewability-version');\n\n    if (version !== '') {\n      this.SDK_URL = `${this.STATIC_URL}/omweb-v1.js`;\n      this.MEASUREMENT_SCRIPT_URL = `${this.STATIC_URL}/measurement-script.${version}.js`;\n    }\n\n    if (sdkUrl) {\n      this.SDK_URL = sdkUrl;\n    }\n\n    if (measurementScriptUrl) {\n      this.MEASUREMENT_SCRIPT_URL = measurementScriptUrl;\n    }\n  }\n\n  getCookie = (name: string) => document.cookie\n    .split(';')\n    .reduce(\n      (acc: string, item: string) => (item.trim().indexOf(name) === 0 ? acc + item.replace(`${name}=`, '').trim() : acc),\n      '',\n    );\n\n  addSession = (element: Element, trackUrl: string) => {\n    const iframe = this.createOmsdkIframe();\n    iframe.addEventListener(\n      'load',\n      () => {\n        const session = this.createAdSession(iframe)(element, trackUrl);\n        session.start();\n      },\n    );\n    document.body.appendChild(iframe);\n  };\n\n  createOmsdkIframe = () => {\n    const iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    iframe.srcdoc = `<script defer src=\"${this.SDK_URL}\"></script>`;\n\n    return iframe;\n  };\n\n  createAdSession = (omsdkIframe: HTMLIFrameElement) => (element: Element, trackUrl: string) => {\n    const partner = new Partner(OmidPartnerName, OmidPartnerVersion);\n    const verificationScriptResource = new VerificationScriptResource(\n      this.MEASUREMENT_SCRIPT_URL,\n      this.VENDOR_KEY,\n      this.VERIFICATIONS_PARAMETER,\n    );\n    const customReferenceData = '';\n\n    const context = new Context(\n      partner,\n      [verificationScriptResource],\n      trackUrl,\n      customReferenceData,\n    );\n\n    context.underEvaluation = false;\n    context.setSlotElement(element);\n    const serviceWindow = omsdkIframe.contentWindow;\n\n    if (!serviceWindow) {\n      throw new Error('OM SDK iframe content window not available.');\n    }\n    context.setServiceWindow(serviceWindow);\n    return new AdSession(context);\n  };\n}\n","import Viewability from './viewability';\n\nwindow.viewability = new Viewability();\n\nconst event = new Event('viewability-loaded', { bubbles: true, composed: true });\nwindow.dispatchEvent(event);\n"],"sourceRoot":""}